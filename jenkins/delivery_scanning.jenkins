/*
delivery_scanning

Run from Vendor_build_onTag

Parameter:
- TAG

Checks out the following:
- vendor TAG

Action:
- Finds some files or so
- Performs scanning via remote host
*/

pipeline {
  agent any

  parameters {
    string(name: 'DeployVersion', defaultValue: 'p-a-03', description: 'Version of Software to scan')
  }

  stages {
    stage('Envs') {
      steps {
        echo '*************************************************************'
        echo 'Show me all ENVS here:'
        sh 'env'
        echo '*************************************************************'
        echo "Do we have this as Groovy Variable? ${DeployVersion}"
      }
    }
    stage('Init') {
      steps {
        sh 'echo "If this file is here, it is not cleaned up" > notcleanedup'
        echo 'Clean workspace'
        cleanWs()
        echo 'checkout k-vendor'
        dir ('vendor') {
          checkout([
            $class: 'GitSCM',
            branches: [[name: "refs/tags/${DeployVersion}"]],
            userRemoteConfigs: [[url: 'https://github.com/ylz/k-vendor.git']]
          ])
        }
        dir ('environment') {
          checkout([
            $class: 'GitSCM',
            branches: [[name: "*/master"]],
            userRemoteConfigs: [[url: 'https://github.com/ylz/k-client.git']]
          ])
        }
      }
    }
    stage('Scan') {
      steps() {
        echo 'do da scan'
        dir ('vendor') {
          sh 'find . -type f -exec ls -lh {} ";"'
          sh 'echo "Show README.md"; cat README.md'
        }
      }
    }
  }
}
